package cn.gdrfgdrf.ConnectComputerServer.Result;

import lombok.Getter;

/**
 * @author gdrfgdrf
 */
public enum ResultEnum {
    AVAILABLE_SERVER(ResultCode.SUCCESS, MessageEnum.AVAILABLE_SERVER),

    SUCCESS_GET(ResultCode.SUCCESS, MessageEnum.SUCCESS_GET),
    SUCCESS_LOGIN(ResultCode.SUCCESS, MessageEnum.SUCCESS_LOGIN),
    SUCCESS_LOGOUT(ResultCode.SUCCESS, MessageEnum.SUCCESS_LOGOUT),
    SUCCESS_CHANGE_PASSWORD(ResultCode.SUCCESS, MessageEnum.SUCCESS_CHANGE_PASSWORD),
    SUCCESS_CHANGE(ResultCode.SUCCESS, MessageEnum.SUCCESS_CHANGE),
    SUCCESS_SWITCH(ResultCode.SUCCESS, MessageEnum.SUCCESS_SWITCH),

    SUCCESS_UPLOAD_FILE(ResultCode.SUCCESS, MessageEnum.SUCCESS_UPLOAD_FILE),

    ERROR_FILE_TOO_BIG(ResultCode.ERROR, MessageEnum.ERROR_FILE_TOO_BIG),
    ERROR_INCORRECT_FILE_TYPE(ResultCode.ERROR, MessageEnum.ERROR_INCORRECT_FILE_TYPE),
    ERROR_UPLOAD_FILE(ResultCode.ERROR, MessageEnum.ERROR_UPLOAD_FILE),

    ERROR_NOT_FOUND_USER(ResultCode.NOT_FOUND, MessageEnum.ERROR_NOT_FOUND_USER),

    ERROR_CLIENT_VERSION_ILLEGAL(ResultCode.SYNTAX_ERROR, MessageEnum.ERROR_CLIENT_VERSION_ILLEGAL),
    ERROR_NOT_FOUND_CLIENT_VERSION_IN_HEADER(ResultCode.NOT_FOUND, MessageEnum.ERROR_NOT_FOUND_CLIENT_VERSION_IN_HEADER),
    ERROR_NOT_FOUND_TOKEN_IN_HEADER(ResultCode.NOT_FOUND, MessageEnum.ERROR_NOT_FOUND_TOKEN_IN_HEADER),
    ERROR_NOT_FOUND_PUBLIC_KEY_IN_HEADER(ResultCode.NOT_FOUND, MessageEnum.ERROR_NOT_FOUND_PUBLIC_KEY_IN_HEADER),
    ERROR_TOKEN_INVALID(ResultCode.NEED_LOGIN, MessageEnum.ERROR_TOKEN_INVALID),
    ERROR_TOKEN_EXPIRED(ResultCode.NEED_LOGIN, MessageEnum.ERROR_TOKEN_EXPIRED),

    ERROR_ID_ILLEGAL(ResultCode.SYNTAX_ERROR, MessageEnum.ERROR_ID_ILLEGAL),
    ERROR_USERNAME_ILLEGAL(ResultCode.SYNTAX_ERROR, MessageEnum.ERROR_USERNAME_ILLEGAL),
    ERROR_PASSWORD_ILLEGAL(ResultCode.SYNTAX_ERROR, MessageEnum.ERROR_PASSWORD_ILLEGAL),
    ERROR_DISPLAY_NAME_ILLEGAL(ResultCode.SYNTAX_ERROR, MessageEnum.ERROR_DISPLAY_NAME_ILLEGAL),

    ERROR_USERNAME_OUT_OF_LIMITED(ResultCode.SYNTAX_ERROR, MessageEnum.ERROR_USERNAME_OUT_OF_LIMITED),
    ERROR_PASSWORD_OUT_OF_LIMITED(ResultCode.SYNTAX_ERROR, MessageEnum.ERROR_PASSWORD_OUT_OF_LIMITED),
    ERROR_DISPLAY_NAME_OUT_OF_LIMITED(ResultCode.SYNTAX_ERROR, MessageEnum.ERROR_DISPLAY_NAME_OUT_OF_LIMITED),

    ERROR_PASSWORD_INCORRECT_OR_NOT_FOUND_USER(ResultCode.ERROR, MessageEnum.ERROR_PASSWORD_INCORRECT_OR_NOT_FOUND_USER),
    ERROR_ORIGINAL_PASSWORD_INCORRECT(ResultCode.ERROR, MessageEnum.ERROR_ORIGINAL_PASSWORD_INCORRECT),

    ERROR_PARAMETER(ResultCode.ERROR_PARAMETER, MessageEnum.ERROR_PARAMETER),
    ERROR_ID_CANNOT_BE_NULL(ResultCode.SYNTAX_ERROR, MessageEnum.ERROR_ID_CANNOT_BE_NULL),
    ERROR_USERNAME_CANNOT_BE_NULL(ResultCode.SYNTAX_ERROR, MessageEnum.ERROR_USERNAME_CANNOT_BE_NULL),
    ERROR_PASSWORD_CANNOT_BE_NULL(ResultCode.SYNTAX_ERROR, MessageEnum.ERROR_PASSWORD_CANNOT_BE_NULL),
    ERROR_ORIGINAL_PASSWORD_CANNOT_BE_NULL(ResultCode.SYNTAX_ERROR, MessageEnum.ERROR_ORIGINAL_PASSWORD_CANNOT_BE_NULL),

    ERROR_RSA_KEY(ResultCode.SYNTAX_ERROR, MessageEnum.ERROR_RSA_KEY),
    ERROR_DECRYPTED(ResultCode.ERROR, MessageEnum.ERROR_DECRYPTED),

    NETTY_LOGIN_SUCCESS(ResultCode.SUCCESS, MessageEnum.NETTY_LOGIN_SUCCESS),

    NETTY_REGISTER_COMPUTER_SUCCESS(ResultCode.SUCCESS, MessageEnum.NETTY_REGISTER_COMPUTER_SUCCESS),
    NETTY_ALREADY_REGISTER_COMPUTER(ResultCode.SUCCESS, MessageEnum.NETTY_ALREADY_REGISTER_COMPUTER),

    NETTY_CONNECT_COMPUTER_SUCCESS(ResultCode.SUCCESS, MessageEnum.NETTY_CONNECT_COMPUTER_SUCCESS),
    NETTY_COMPUTER_IS_CONNECTED(ResultCode.SUCCESS, MessageEnum.NETTY_COMPUTER_IS_CONNECTED),
    NETTY_CONTROLLER_DISCONNECTED(ResultCode.SUCCESS, MessageEnum.NETTY_CONTROLLER_DISCONNECTED),
    NETTY_COMPUTER_DISCONNECTED(ResultCode.SUCCESS, MessageEnum.NETTY_COMPUTER_DISCONNECTED),

    NETTY_COMPUTER_ONLINE(ResultCode.SUCCESS, MessageEnum.NETTY_COMPUTER_ONLINE),
    NETTY_COMPUTER_OFFLINE(ResultCode.SUCCESS, MessageEnum.NETTY_COMPUTER_OFFLINE),

    NETTY_AES_KEY_IS_GENERATED(ResultCode.SUCCESS, MessageEnum.NETTY_AES_KEY_IS_GENERATED),
    NETTY_AES_KEY_HAS_BEEN_GENERATED(ResultCode.CONDITION_NOT_SATISFIED, MessageEnum.NETTY_AES_KEY_HAS_BEEN_GENERATED),
    NETTY_AES_KEY_HAS_NOT_BEEN_GENERATED(ResultCode.CONDITION_NOT_SATISFIED, MessageEnum.NETTY_AES_KEY_HAS_NOT_BEEN_GENERATED),

    NETTY_CONTROLLER_EXCHANGE_RSA_KEY(ResultCode.SUCCESS, MessageEnum.NETTY_CONTROLLER_EXCHANGE_RSA_KEY),
    NETTY_COMPUTER_EXCHANGE_RSA_KEY(ResultCode.SUCCESS, MessageEnum.NETTY_COMPUTER_EXCHANGE_RSA_KEY),
    NETTY_CONTROLLER_ENCRYPTED_MESSAGE(ResultCode.SUCCESS, MessageEnum.NETTY_CONTROLLER_ENCRYPTED_MESSAGE),
    NETTY_COMPUTER_ENCRYPTED_MESSAGE(ResultCode.SUCCESS, MessageEnum.NETTY_COMPUTER_ENCRYPTED_MESSAGE),

    NETTY_CONTROLLER_KEY_PRESSED(ResultCode.SUCCESS, MessageEnum.NETTY_CONTROLLER_KEY_PRESSED),
    NETTY_CONTROLLER_KEY_TYPED(ResultCode.SUCCESS, MessageEnum.NETTY_CONTROLLER_KEY_TYPED),
    NETTY_CONTROLLER_REQUEST(ResultCode.SUCCESS, MessageEnum.NETTY_CONTROLLER_REQUEST),
    NETTY_COMPUTER_RESPONSE(ResultCode.SUCCESS, MessageEnum.NETTY_COMPUTER_RESPONSE),
    NETTY_CONTROLLER_TERMINAL_CLOSED(ResultCode.SUCCESS, MessageEnum.NETTY_CONTROLLER_TERMINAL_CLOSED),
    NETTY_COMPUTER_TERMINAL_CLOSED(ResultCode.SUCCESS, MessageEnum.NETTY_COMPUTER_TERMINAL_CLOSED),

    NETTY_COMPUTER_NOT_ONLINE(ResultCode.CONDITION_NOT_SATISFIED, MessageEnum.NETTY_COMPUTER_NOT_ONLINE),

    NETTY_NEED_LOGIN(ResultCode.NEED_LOGIN, MessageEnum.NETTY_NEED_LOGIN),
    NETTY_ALREADY_LOGIN(ResultCode.CONDITION_NOT_SATISFIED, MessageEnum.NETTY_ALREADY_LOGIN),

    NETTY_LOGIN_MODE_IS_NOT_COMPUTER(ResultCode.CONDITION_NOT_SATISFIED, MessageEnum.NETTY_LOGIN_MODE_IS_NOT_COMPUTER),
    NETTY_LOGIN_MODE_IS_NOT_CONTROLLER(ResultCode.CONDITION_NOT_SATISFIED, MessageEnum.NETTY_LOGIN_MODE_IS_NOT_CONTROLLER),
    NETTY_CONTROLLER_IS_CONTROLLING(ResultCode.CONDITION_NOT_SATISFIED, MessageEnum.NETTY_CONTROLLER_IS_CONTROLLING),
    NETTY_CONTROLLER_IS_NOT_CONTROLLING(ResultCode.CONDITION_NOT_SATISFIED, MessageEnum.NETTY_CONTROLLER_IS_NOT_CONTROLLING),
    NETTY_COMPUTER_IS_NOT_CONTROLLED(ResultCode.CONDITION_NOT_SATISFIED, MessageEnum.NETTY_COMPUTER_IS_NOT_CONTROLLED),
    NETTY_ONLY_SINGLE_CONNECTION(ResultCode.CONDITION_NOT_SATISFIED, MessageEnum.NETTY_ONLY_SINGLE_CONNECTION),
    NETTY_CONTROLLER_IS_NOT_EXCHANGE_RSA_KEY(ResultCode.CONDITION_NOT_SATISFIED, MessageEnum.NETTY_CONTROLLER_IS_NOT_EXCHANGE_RSA_KEY),
    NETTY_COMPUTER_IS_NOT_EXCHANGE_RSA_KEY(ResultCode.CONDITION_NOT_SATISFIED, MessageEnum.NETTY_COMPUTER_IS_NOT_EXCHANGE_RSA_KEY),
    NETTY_CONTROLLER_ALREADY_EXCHANGED_RSA_KEY(ResultCode.CONDITION_NOT_SATISFIED, MessageEnum.NETTY_CONTROLLER_ALREADY_EXCHANGED_RSA_KEY),
    NETTY_COMPUTER_ALREADY_EXCHANGED_RSA_KEY(ResultCode.CONDITION_NOT_SATISFIED, MessageEnum.NETTY_COMPUTER_ALREADY_EXCHANGED_RSA_KEY),

    NETTY_FORCED_OFFLINE(ResultCode.NEED_LOGIN, MessageEnum.NETTY_FORCED_OFFLINE),

    NETTY_NOT_FOUND_COMPUTER(ResultCode.NOT_FOUND, MessageEnum.NETTY_NOT_FOUND_COMPUTER),

    NETTY_HEART_TIMEOUT(ResultCode.TIMEOUT, MessageEnum.NETTY_TIMEOUT),
    NETTY_GOODBYE(ResultCode.GOODBYE, MessageEnum.NETTY_GOODBYE),

    NETTY_CLIENT_VERSION_TOO_LOW(ResultCode.NEED_LOGIN, MessageEnum.NETTY_CLIENT_VERSION_TOO_LOW),
    VERSION_TOO_LOW(ResultCode.NEED_UPDATE, MessageEnum.VERSION_TOO_LOW),

    ERROR(ResultCode.ERROR, MessageEnum.ERROR),
    ERROR_HTTP_MESSAGE_NOT_READABLE(ResultCode.ERROR, MessageEnum.ERROR_HTTP_MESSAGE_NOT_READABLE),
    ERROR_CRYPT(ResultCode.ERROR, MessageEnum.ERROR_CRYPT),
    UNKNOWN_LANGUAGE(ResultCode.ERROR, MessageEnum.UNKNOWN_LANGUAGE);

    @Getter
    private final Integer code;
    @Getter
    private final MessageEnum messageEnum;

    ResultEnum(Integer code, MessageEnum messageEnum) {
        this.code = code;
        this.messageEnum = messageEnum;
    }
}
